// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using REACTBIGBANG.Models;

#nullable disable

namespace REACTBIGBANG.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20230630073224_Start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("REACTBIGBANG.Models.Admin", b =>
                {
                    b.Property<int>("Admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_id"));

                    b.Property<string>("Admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_id");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("REACTBIGBANG.Models.Doctor", b =>
                {
                    b.Property<int>("Doctor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Doctor_id"));

                    b.Property<int>("Doctor_experience")
                        .HasColumnType("int");

                    b.Property<string>("Doctor_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doctor_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doctor_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doctor_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Doctor_id");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("REACTBIGBANG.Models.Patient", b =>
                {
                    b.Property<int>("Patient_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Patient_id"));

                    b.Property<int?>("DoctorsDoctor_id")
                        .HasColumnType("int");

                    b.Property<string>("Medical_treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patient_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Patient_age")
                        .HasColumnType("int");

                    b.Property<string>("Patient_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patient_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patient_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phonenumber")
                        .HasColumnType("bigint");

                    b.HasKey("Patient_id");

                    b.HasIndex("DoctorsDoctor_id");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("REACTBIGBANG.Models.Patient", b =>
                {
                    b.HasOne("REACTBIGBANG.Models.Doctor", "Doctors")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorsDoctor_id");

                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("REACTBIGBANG.Models.Doctor", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
